<% layout("/layouts/boilerplate") %>
  <style>
    #filters {
      display: flex;
      /* flex-wrap: wrap; */
      width: 100% !important;
      align-items: center;
      height: 100px !important;
      overflow: scroll;
    }
    #filters a {
      color: black;
      text-decoration: none;
    }
    .filter {
      text-align: center;
      margin-right: 2rem;
      margin-top: 2rem;
      opacity: 0.7;
    }

    .filter:hover {
      opacity: 1 !important;
      cursor: pointer;
      transform: scale(1.05) !important;
      transition: 100ms ease all !important;
    }

    .filter p {
      font-size: 0.95rem;
    }

    .tax-info {
      display: none;

    }

    .tax-toggle {
      border: 1px solid black;
      border-radius: 1rem;
      height: 3.58rem;
      padding: 1rem;
      /* margin-left: 3rem; */
      display: flex;
      min-width: 250px;
      width: fit-content;
      margin-top: 0.8rem;
      align-items: center;
    }

.selected-filter {
border-bottom: 3px solid #683193; /* Adjust the styling as needed */
    }
  </style>
  <div id="filters">
    <a href="/listings/filter/1">
      <div class="filter" id="filter-trending" data-category="trending">
        <div><i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
      </div>
    </a>
    <a href="/listings/filter/2">
      <div class="filter" id="filter-rooms" data-category="Rooms">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
      </div>
    </a>
    <a href="/listings/filter/3">
      <div class="filter" id="filter-iconic-cities" data-category="Iconic-Cities">
        <div><i class="fa-solid fa-city"></i></div>
        <p>Cities</p>
      </div>
    </a>
    <a href="/listings/filter/4">
      <div class="filter" id="filter-mountains" data-category="Mountains">
        <div><i class="fa-solid fa-mountain"></i></div>
        <p>Mountains</p>
      </div>
    </a>
    <a href="/listings/filter/5">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-brands fa-fort-awesome"></i></div>
        <p>Castles</p>
      </div>
    </a>
    <a href="/listings/filter/6">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
      </div>
    </a>
    <a href="/listings/filter/7">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-solid fa-tents"></i></div>
        <p>Camping</p>
      </div>
    </a>
    <a href="/listings/filter/8">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-solid fa-person-skiing"></i></div>
        <p>Skiing</p>
      </div>
    </a>
    <a href="/listings/filter/9">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-solid fa-person-swimming"></i></div>
        <p>Pools</p>
      </div>
    </a>
    <a href="/listings/filter/10">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-solid fa-snowflake"></i></div>
        <p>Arctic</p>
      </div>
    </a>
    <a href="/listings/filter/11">
      <div class="filter" id="filter-all" data-category="All">
        <div><i class="fa-solid fa-building"></i></div>
        <p>Design</p>
      </div>
    </a>
    <div class="tax-toggle">
      <div class="form-check-reverse form-switch">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
        <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
      </div>
    </div>
  </div>

  <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3">
    <% for (let listing of allListings) { %>
      <a href="/listings/<%= listing._id %>" class="listing-link">
        <div class="card col listing-card">
          <div class="imgHovers mb-2" style="box-shadow: 10px 10px 10px rgba(0,0,0, 0.45);">
            <!-- <img src="/images/heart.png" class="" id="heart" alt="Heart"/> -->
            <div class="like-button" style="position: absolute; top: 10px; right: 10px; z-index: 10;">
              <div class="heart-bg">
                <div class="heart-icon"></div>
              </div>
            </div>
            <img src="<%= listing.image.url %>" class="card-img-top imgHover" id="imgh" alt="listing_image" />
          </div>
          <div class="card-body">
            <p class="card-text">
              <b>
                <%= listing.title %>
              </b><br>
              <span class="price-info">
                &#8377;<%= listing.price.toLocaleString("en-IN") %> / night
              </span>
              <span class="tax-info" style="display: none;"> <!-- Initial display is set to none -->
                &nbsp;
                <i class="rs-sign"><b> &#8377;<%= (listing.price * 1.18).toLocaleString("en-IN") %></b>
                  &nbsp; +18% total after taxes
                </i>
              </span>
            </p>
          </div>
        </div>
      </a>
      <% } %>
  </div>

  <script>
    let taxSwitch = document.getElementById("flexSwitchCheckDefault");
    taxSwitch.addEventListener("click", () => {
      let taxInfoElements = document.querySelectorAll(".tax-info");
      let priceInfoElements = document.querySelectorAll(".price-info");

      for (let i = 0; i < taxInfoElements.length; i++) {
        if (taxSwitch.checked) {
          taxInfoElements[i].style.display = "inline";
          priceInfoElements[i].style.display = "none";
        } else {
          taxInfoElements[i].style.display = "none";
          priceInfoElements[i].style.display = "inline";
        }
      }
    });

    const likeButtons = document.querySelectorAll(".like-button");

    // Iterate through each like button and add a click event listener
    likeButtons.forEach(likeButton => {
      const heartIcon = likeButton.querySelector(".heart-icon");
      const likesAmountLabel = likeButton.nextElementSibling; // Assumes likes-amount is a sibling element

      // Prevent the default click behavior on the heart icon
      heartIcon.addEventListener("click", (event) => {
        event.preventDefault();
      });

      likeButton.addEventListener("click", () => {
        heartIcon.classList.toggle("liked");
        likesAmountLabel.innerHTML = parseInt(likesAmountLabel.innerHTML) + 1;
      });
    });
    

  document.addEventListener("DOMContentLoaded", function () {
    // Get all filter elements
    const filters = document.querySelectorAll('.filter');

    // Add click event listener to each filter
    filters.forEach(filter => {
      filter.addEventListener('click', function () {
        // Remove 'selected-filter' class from all filters
        filters.forEach(f => f.classList.remove('selected-filter'));

        // Add 'selected-filter' class to the clicked filter
        this.classList.add('selected-filter');
      });
    });
  });


  </script>